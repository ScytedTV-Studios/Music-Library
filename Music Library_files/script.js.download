document.addEventListener('DOMContentLoaded', function () {
// Function to fetch the song list data from the JSON file
function fetchSongs() {
    return fetch('https://cdn.scyted.tv/toolkit/music-library/songs.json/')
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to fetch songs. HTTP status code: ' + response.status);
        }
        return response.json();
      })
      .catch(error => {
        console.error('Failed to fetch songs:', error);
        throw error;
      });
  }  

  // Function to populate the song list table
  function populateSongList() {
    fetchSongs()
      .then(songs => {
        const songList = document.getElementById('songList');
        const tbody = songList.querySelector('tbody');
        tbody.innerHTML = '';

        songs.forEach(function (song) {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${song.title}</td>
            <td><a href="${song.artistLink}" target="_blank">${song.artist}</a></td>
            <td>${song.genre}</td>
            <td>${song.mood}</td>
            <td>
              <audio controls>
                <source src="${song.url}" type="audio/mpeg">
                Your browser does not support the audio element.
              </audio>
            </td>
            <td><a href="${song.url}" download>Download</a></td>
          `;

          tbody.appendChild(row);
        });
      })
      .catch(error => {
        console.error(error);
      });
  }

  // Function to filter songs based on selected filters
  function filterSongs() {
    const genre = document.getElementById('genre').value;
    const mood = document.getElementById('mood').value;
    const search = document.getElementById('search').value.toLowerCase();

    fetchSongs()
      .then(songs => {
        let filteredSongs = songs;

        if (genre) {
          filteredSongs = filteredSongs.filter(song => song.genre.toLowerCase() === genre.toLowerCase());
        }

        if (mood) {
          filteredSongs = filteredSongs.filter(song => song.mood.toLowerCase() === mood.toLowerCase());
        }

        if (search) {
          filteredSongs = filteredSongs.filter(song => song.title.toLowerCase().includes(search) || song.artist.toLowerCase().includes(search));
        }

        const songList = document.getElementById('songList');
        const tbody = songList.querySelector('tbody');
        tbody.innerHTML = '';

        filteredSongs.forEach(function (song) {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${song.title}</td>
            <td><a href="${song.artistLink}" target="_blank">${song.artist}</a></td>
            <td>${song.genre}</td>
            <td>${song.mood}</td>
            <td>
              <audio controls>
                <source src="${song.url}" type="audio/mpeg">
                Your browser does not support the audio element.
              </audio>
            </td>
            <td><a href="${song.url}" download>Download</a></td>
          `;

          tbody.appendChild(row);
        });
      })
      .catch(error => {
        console.error(error);
      });
  }

  // Event listeners for filter changes
  document.getElementById('genre').addEventListener('change', filterSongs);
  document.getElementById('mood').addEventListener('change', filterSongs);
  document.getElementById('search').addEventListener('keyup', filterSongs);

  // Initial population of the song list table
  populateSongList();
});